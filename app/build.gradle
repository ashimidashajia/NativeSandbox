apply plugin: 'com.android.application'

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {

        applicationId "fr.xgouchet.nativesandbox"

        minSdkVersion 18
        targetSdkVersion 20

        versionCode 1
        versionName "1.0"
    }

    sourceSets.main {
        // hack to disable automatic ndk-build call
        jni.srcDirs = []
        // set the location of the compiled native libs
        jniLibs.srcDir 'src/main/libs'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            runProguard false
        }
    }


}

dependencies {

}

// Manual call the ndk-build command
task buildNative(type: Exec) {
    // Get the build file
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir')
    ndkBuild = new File(ndkDir, 'ndk-build')
    print ndkBuild

    // Get the source directory
    def jniSrc = file('src/main/jni').absolutePath
    commandLine ndkBuild, "--directory", jniSrc
}

// Manual call the ndk-build clean command
task cleanNative(type: Exec) {
    // Get the build file
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir')
    ndkBuild = new File(ndkDir, 'ndk-build')
    print ndkBuild

    // Get the source directory
    def jniSrc = file('src/main/jni').absolutePath
    commandLine ndkBuild, "--directory", jniSrc, "clean"
}

// make java compile tasks depend on the ndk task
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn buildNative
}

// make the global clean depend on the ndk clean task
clean.dependsOn cleanNative
